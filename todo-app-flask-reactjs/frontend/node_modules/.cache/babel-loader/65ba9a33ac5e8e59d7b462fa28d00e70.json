{"ast":null,"code":"var _jsxFileName = \"/home/prabhrati/Desktop/my_project/todo-app-flask-reactjs/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { getTasks, addTask, updateTask, deleteTask } from './api';\nimport TodoInput from './src/components/TodoInput';\nimport TodoList from './src/components/TodoList';\nimport TodoTabs from './src/components/TodoTabs';\nimport Model from './src/components/Model';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isCompleteScreen, setIsCompleteScreen] = useState(false);\n  const [allTodos, setTodos] = useState([]);\n  const [completedTodos, setCompletedTodos] = useState([]);\n  const [currentEdit, setCurrentEdit] = useState(\"\");\n  const [currentEditedItem, setCurrentEditedItem] = useState(\"\");\n  const [showModel, setShowModel] = useState(false);\n  const [modelMessage, setModelMessage] = useState(\"\");\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  const fetchTasks = async () => {\n    try {\n      const response = await getTasks();\n      const todos = response.data.filter(todo => todo.status !== 'Completed');\n      const completed = response.data.filter(todo => todo.status === 'Completed');\n      setTodos(todos);\n      setCompletedTodos(completed);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n\n  const handleAddTodo = async (newTitle, newDescription) => {\n    if (!newTitle.trim()) {\n      // Ensure title is not empty\n      setModelMessage('Task title is required');\n      setShowModel(true);\n      return;\n    }\n\n    let newTodoItem = {\n      title: newTitle,\n      description: newDescription,\n      status: 'Not Completed'\n    };\n\n    try {\n      await addTask(newTodoItem);\n      fetchTasks();\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n\n  const handleDeleteTodo = async id => {\n    try {\n      await deleteTask(id);\n      fetchTasks();\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n\n  const handleComplete = async id => {\n    const completedTask = { ...allTodos.find(todo => todo.id === id),\n      status: 'Completed'\n    };\n\n    try {\n      await updateTask(id, completedTask);\n      fetchTasks();\n    } catch (error) {\n      console.error('Error completing task:', error);\n    }\n  };\n\n  const handleEdit = (ind, item) => {\n    setCurrentEdit(ind);\n    setCurrentEditedItem(item);\n  };\n\n  const handleUpdateTitle = value => {\n    setCurrentEditedItem(prev => {\n      return { ...prev,\n        title: value\n      };\n    });\n  };\n\n  const handleUpdateDescription = value => {\n    setCurrentEditedItem(prev => {\n      return { ...prev,\n        description: value\n      };\n    });\n  };\n\n  const handleUpdateToDo = async () => {\n    try {\n      await updateTask(currentEdit, currentEditedItem);\n      setCurrentEdit(\"\");\n      fetchTasks();\n    } catch (error) {\n      console.error('Error updating task:', error);\n    }\n  };\n\n  const closeModel = () => {\n    setShowModel(false);\n    setModelMessage(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Todos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoInput, {\n      onAdd: handleAddTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoTabs, {\n      isCompleteScreen: isCompleteScreen,\n      setIsCompleteScreen: setIsCompleteScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todos: isCompleteScreen ? completedTodos : allTodos,\n      isCompleteScreen: isCompleteScreen,\n      onDelete: handleDeleteTodo,\n      onComplete: handleComplete,\n      onEdit: handleEdit,\n      onUpdateTitle: handleUpdateTitle,\n      onUpdateDescription: handleUpdateDescription,\n      currentEdit: currentEdit,\n      currentEditedItem: currentEditedItem,\n      onUpdate: handleUpdateToDo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Model, {\n      show: showModel,\n      message: modelMessage,\n      onClose: closeModel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"RTJeyRwlWqjm0tBYdbFkgQpjF0c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","getTasks","addTask","updateTask","deleteTask","TodoInput","TodoList","TodoTabs","Model","App","isCompleteScreen","setIsCompleteScreen","allTodos","setTodos","completedTodos","setCompletedTodos","currentEdit","setCurrentEdit","currentEditedItem","setCurrentEditedItem","showModel","setShowModel","modelMessage","setModelMessage","fetchTasks","response","todos","data","filter","todo","status","completed","error","console","handleAddTodo","newTitle","newDescription","trim","newTodoItem","title","description","handleDeleteTodo","id","handleComplete","completedTask","find","handleEdit","ind","item","handleUpdateTitle","value","prev","handleUpdateDescription","handleUpdateToDo","closeModel"],"sources":["/home/prabhrati/Desktop/my_project/todo-app-flask-reactjs/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { getTasks, addTask, updateTask, deleteTask } from './api';\nimport TodoInput from './src/components/TodoInput';\nimport TodoList from './src/components/TodoList';\nimport TodoTabs from './src/components/TodoTabs';\nimport Model from './src/components/Model';\n\nfunction App() {\n  const [isCompleteScreen, setIsCompleteScreen] = useState(false);\n  const [allTodos, setTodos] = useState([]);\n  const [completedTodos, setCompletedTodos] = useState([]);\n  const [currentEdit, setCurrentEdit] = useState(\"\");\n  const [currentEditedItem, setCurrentEditedItem] = useState(\"\");\n  const [showModel, setShowModel] = useState(false);\n  const [modelMessage, setModelMessage] = useState(\"\");\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  const fetchTasks = async () => {\n    try {\n      const response = await getTasks();\n      const todos = response.data.filter(todo => todo.status !== 'Completed');\n      const completed = response.data.filter(todo => todo.status === 'Completed');\n      setTodos(todos);\n      setCompletedTodos(completed);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n\n  const handleAddTodo = async (newTitle, newDescription) => {\n    if (!newTitle.trim()) { // Ensure title is not empty\n      setModelMessage('Task title is required');\n      setShowModel(true);\n      return;\n    }\n\n    let newTodoItem = {\n      title: newTitle,\n      description: newDescription,\n      status: 'Not Completed'\n    };\n\n    try {\n      await addTask(newTodoItem);\n      fetchTasks();\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n\n  const handleDeleteTodo = async (id) => {\n    try {\n      await deleteTask(id);\n      fetchTasks();\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n\n  const handleComplete = async (id) => {\n    const completedTask = {\n      ...allTodos.find(todo => todo.id === id),\n      status: 'Completed'\n    };\n    try {\n      await updateTask(id, completedTask);\n      fetchTasks();\n    } catch (error) {\n      console.error('Error completing task:', error);\n    }\n  };\n\n  const handleEdit = (ind, item) => {\n    setCurrentEdit(ind);\n    setCurrentEditedItem(item);\n  };\n\n  const handleUpdateTitle = (value) => {\n    setCurrentEditedItem((prev) => {\n      return { ...prev, title: value };\n    });\n  };\n\n  const handleUpdateDescription = (value) => {\n    setCurrentEditedItem((prev) => {\n      return { ...prev, description: value };\n    });\n  };\n\n  const handleUpdateToDo = async () => {\n    try {\n      await updateTask(currentEdit, currentEditedItem);\n      setCurrentEdit(\"\");\n      fetchTasks();\n    } catch (error) {\n      console.error('Error updating task:', error);\n    }\n  };\n\n  const closeModel = () => {\n    setShowModel(false);\n    setModelMessage(\"\");\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>My Todos</h1>\n      <TodoInput onAdd={handleAddTodo} />\n      <TodoTabs\n        isCompleteScreen={isCompleteScreen}\n        setIsCompleteScreen={setIsCompleteScreen}\n      />\n      <TodoList\n        todos={isCompleteScreen ? completedTodos : allTodos}\n        isCompleteScreen={isCompleteScreen}\n        onDelete={handleDeleteTodo}\n        onComplete={handleComplete}\n        onEdit={handleEdit}\n        onUpdateTitle={handleUpdateTitle}\n        onUpdateDescription={handleUpdateDescription}\n        currentEdit={currentEdit}\n        currentEditedItem={currentEditedItem}\n        onUpdate={handleUpdateToDo}\n      />\n      <Model show={showModel} message={modelMessage} onClose={closeModel} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}